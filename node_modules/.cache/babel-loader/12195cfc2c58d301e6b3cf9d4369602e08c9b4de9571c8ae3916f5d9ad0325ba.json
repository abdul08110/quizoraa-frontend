{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS\\\\aptitude-contest-app\\\\src\\\\components\\\\ProtectedRoute.tsx\";\n// ProtectedRoute.tsx\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const isLoggedIn = localStorage.getItem(\"isLoggedIn\") === \"true\";\n  if (!isLoggedIn) {\n    alert(\"You have to login.\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","isLoggedIn","localStorage","getItem","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/VS/aptitude-contest-app/src/components/ProtectedRoute.tsx"],"sourcesContent":["// ProtectedRoute.tsx\r\nimport React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  children: React.ReactElement;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<Props> = ({ children }) => {\r\n  const isLoggedIn = localStorage.getItem(\"isLoggedIn\") === \"true\";\r\n\r\n  if (!isLoggedIn) {\r\n    alert(\"You have to login.\");\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM5C,MAAMC,cAA+B,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACxD,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;EAEhE,IAAI,CAACF,UAAU,EAAE;IACfG,KAAK,CAAC,oBAAoB,CAAC;IAC3B,oBAAON,OAAA,CAACF,QAAQ;MAACS,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,OAAOT,QAAQ;AACjB,CAAC;AAACU,EAAA,GATIX,cAA+B;AAWrC,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}